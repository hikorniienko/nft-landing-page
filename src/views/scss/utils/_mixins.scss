
@mixin mmin($width, $height: 0) {
  $w: $width + px;
  $h: $height + px;

  @if $height == 0 {
    @media all and (min-width: $w) {
      @content;
    }
  } @else {
    @media all and (min-width: $w) and (min-height: $h) {
      @content;
    }
  }
}

@mixin mmax($width, $height: 0) {
  $w: $width + px;
  $h: $height + px;

  @if $height == 0 {
    @media all and (max-width: $w) {
      @content;
    }
  } @else {
    @media all and (max-width: $w) and (max-height: $h) {
      @content;
    }
  }
}

@mixin mmin-h($height) {
  $h: $height + px;

  @media all and (min-height: $h) {
    @content;
  }
}

@mixin mmax-h($height) {
  $h: $height + px;

  @media all and (max-height: $h) {
    @content;
  }
}

@mixin mmin-landscape($width, $height: 0) {
  $w: $width + px;
  $h: $height + px;

  @if $h == 0 {
    @media all and (min-width: $w) and (orientation: landscape) {
      @content;
    }
  } @else {
    @media all and (min-width: $w) and (min-height: $h) and (orientation: landscape) {
      @content;
    }
  }
}

@mixin mmax-landscape($width, $height: 0) {
  $w: $width + px;
  $h: $height + px;

  @if $h == 0 {
    @media all and (max-width: $w) and (orientation: landscape) {
      @content;
    }
  } @else {
    @media all and (max-width: $w) and (max-height: $h) and (orientation: landscape) {
      @content;
    }
  }
}

@mixin mmin-portrait($width, $height: 0) {
  $w: $width + px;
  $h: $height + px;

  @if $h == 0 {
    @media all and (min-width: $w) and (orientation: portrait) {
      @content;
    }
  } @else {
    @media all and (min-width: $w) and (min-height: $h) and (orientation: portrait) {
      @content;
    }
  }
}

@mixin mmax-portrait($width, $height: 0) {
  $w: $width + px;
  $h: $height + px;

  @if $h == 0 {
    @media all and (max-width: $w) and (orientation: portrait) {
      @content;
    }
  } @else {
    @media all and (max-width: $w) and (max-height: $h) and (orientation: portrait) {
      @content;
    }
  }
}

@mixin ib {
  display: inline-block;
  vertical-align: top;
}

@mixin link {
  &,
  &:hover,
  &:active,
  &:visited,
  &:focus {
    @content;
  }
}

@mixin link-h {
  &:hover,
  &:active,
  &:focus {
    @content;
  }
}

@mixin link-v {
  &,
  &:visited {
    @content;
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-ms-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
}

@mixin no-select {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

@mixin select {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
}

@mixin container($mw: 1170px) {
  display: block;
  margin: 0 auto;
  max-width: $mw;
  min-width: 320px;
}

@mixin full {
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

@mixin full-abs {
  position: absolute;
  @include full;
}

@mixin full-fix {
  position: fixed;
  @include full;
}

@mixin full-rel {
  position: relative;

  width: 100%;
  height: 100%;
}

@mixin va-abs {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin flc {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}

@mixin fl-row {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: flex-start;
}

@mixin dflex($al: stretch, $wrap: wrap, $just: space-between) {
  display: flex;
  justify-content: $just;
  flex-wrap: $wrap;
  align-items: $al;
}

@mixin hide-play() {
  &::-webkit-media-controls-panel {
    display: none !important;
    -webkit-appearance: none;
  }

  &::--webkit-media-controls-play-button {
    display: none !important;
    -webkit-appearance: none;
  }

  &::-webkit-media-controls-start-playback-button {
    display: none !important;
    -webkit-appearance: none;
  }
}

@mixin ios-border-radius-null {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  border-radius: 0;
}

@mixin float-clear {
  &:after {
    content: '';

    clear: both;

    display: block;
    margin-top: -1px;

    width: 100%;
    height: 1px;
  }
}

@mixin reset-button() {
  @include ib;

  padding: 0;
  margin: 0;
  border: none;

  font-family: inherit;
  font-size: inherit;

  background: transparent;
  cursor: pointer;

  &:focus {
    outline: none;
  }
}

@mixin full-reset($w: auto, $h: auto) {
  position: static;
  top: auto;
  left: auto;
  right: auto;
  bottom: auto;
  transform: none;
  width: $w;
  height: $h;
}

